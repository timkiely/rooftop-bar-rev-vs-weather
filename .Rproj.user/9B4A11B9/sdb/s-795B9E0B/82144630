{
    "collab_server" : "",
    "contents" : "\n\nlibrary(tidyverse)\nlibrary(stringr)\n\n\nrev_data <- read_csv(\"Daily Bar Revenue - FFI.csv\")\nrev_data %>% glimpse()\n\n# create date variables -------------------------------------------------------\nrev_data <- \n  rev_data %>% \n  rowwise() %>% \n  mutate(date_Day = str_extract(Date,\"[^/]*$\")\n         ,date_Month = str_extract(Date,\"[^/]*\")\n         ) \n\n\n\n# split the dataframe into individual years, add dates and re-combine ---------\nrev_data_1 <- rev_data %>% select(Date,`2015 Bar Earnings`,Day, date_Month, date_Day)\nrev_data_2 <- rev_data %>% select(Date,`2016 Bar Earnings`,Day2, date_Month, date_Day)\nrev_data_3 <- rev_data %>% select(Date,`2017 Bar Earnings`,Day3, date_Month, date_Day)\n\nrev_data_1_clean <- rev_data_1 %>% mutate(Year = 2015) %>% rename(\"Earnings\"=`2015 Bar Earnings`, \"Day\"=Day) %>% filter(Earnings!=\"CLOSED\") %>% mutate(Date_actual = as.Date(str_c(Date,\"/\",Year),format=\"%m/%d/%Y\")) %>% select(-Date,-date_Month,-date_Day,-Year)\nrev_data_2_clean <- rev_data_2 %>% mutate(Year = 2016) %>% rename(\"Earnings\"=`2016 Bar Earnings`, \"Day\"=Day2) %>% filter(Earnings!=\"CLOSED\") %>% mutate(Date_actual = as.Date(str_c(Date,\"/\",Year),format=\"%m/%d/%Y\")) %>% select(-Date,-date_Month,-date_Day,-Year)\nrev_data_3_clean <- rev_data_3 %>% mutate(Year = 2017) %>% rename(\"Earnings\"=`2017 Bar Earnings`, \"Day\"=Day3) %>% filter(Earnings!=\"CLOSED\") %>% mutate(Date_actual = as.Date(str_c(Date,\"/\",Year),format=\"%m/%d/%Y\")) %>% select(-Date,-date_Month,-date_Day,-Year)\n\n\nrev_data_clean <- \n  bind_rows(rev_data_1_clean,rev_data_2_clean,rev_data_3_clean) %>% \n  filter(Earnings!=\"Closed\") %>% \n  mutate(Earnings = as.numeric(Earnings)) %>% \n  mutate(Day_lab = lubridate::wday(Date_actual, label = T)\n         ,Month = lubridate::month(Date_actual, label = T)\n         ,Year = lubridate::year(Date_actual)\n         )\n\n\n# do some EDA -----------------------------------------------------------------\nrev_data_clean %>% ggplot() + aes(x = Date_actual, y = Earnings) + geom_line(group=1)\nrev_data_clean %>% ggplot() + aes(x = Date_actual, y = Earnings, fill = Earnings) + geom_col()\nrev_data_clean %>% \n  ggplot() + \n  aes(x = Date_actual, y = Earnings, fill = Earnings) + \n  geom_col()+\n  facet_grid(Month~Year, scales = \"free_x\")+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n# isolate the specials --------------------------------------------------------\nspecials_2016 <- rev_data %>% filter(is.na(Weather),!is.na(`Events/Specials/Notes`)) %>% select(Date,`Events/Specials/Notes`) %>% rename('Special' = `Events/Specials/Notes`)\nspecials_2016 <- specials_2016 %>% mutate(Year = 2016, Date_actual = as.Date(str_c(Date,\"/\",Year),format=\"%m/%d/%Y\"))\nspecials_2017 <- rev_data %>% filter(!is.na(Weather)) %>% select(Date,`Events/Specials/Notes`) %>% rename('Special' = `Events/Specials/Notes`)\nspecials_2017 <- specials_2017 %>% mutate(Year = 2016, Date_actual = as.Date(str_c(Date,\"/\",Year),format=\"%m/%d/%Y\"))\nspecials <- bind_rows(specials_2016,specials_2017) %>% select(-Date,-Year)\n\n\n# combine specials+revenue data -----------------------------------------------\nrev_data_plus_specials <- left_join(rev_data_clean,specials, by = \"Date_actual\")\n\n\n\n# create sequence of all dates ------------------------------------------------\nall_date_seq <- seq.Date(from = min(rev_data_clean$Date_actual)\n                          , to = max(rev_data_clean$Date_actual) \n                           , by = \"day\")\n\n\n# map in weather data ---------------------------------------------------------\n\n## data from https://www.wunderground.com/personal-weather-station/dashboard?ID=KNYNEWYO395#history/s20150101/e20170523/mcustom\n\n# First batch:\n# weather_raw <- read_csv(\"Weather-Chelsea-NY.csv\")\n\n# improived data: \nweather_raw <- read_csv(\"Weather-NYC-2017-05-30.csv\")\n\n                                                      \n\nweather_clean <- \n  weather_raw %>% \n  mutate(PrecipitationIn = as.numeric(PrecipitationIn)\n         ) %>% \n  select(-EDT,-EST)\n\n\n# Join weather data to revenue data -------------------------------------------\n\n# check to see if the date range is complete:\nanti_join(data.frame(\"Date\" = all_date_seq), weather_clean)\n\n\nrev_ts <- tbl_df(left_join(weather_clean,rev_data_plus_specials, by = c(\"Date\" = \"Date_actual\")))\n\n\nrev_ts <- \n  rev_ts %>% \n  mutate(Day_lab = lubridate::wday(Date, label = T)\n       , Month = lubridate::month(Date, label = T)\n       , Year = lubridate::year(Date)\n       )\n\n\nsaveRDS(rev_ts,\"weather-revenue-data-v002.rds\")\n\n\n\n\n\n",
    "created" : 1495553272773.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2901072439",
    "id" : "82144630",
    "lastKnownWriteTime" : 1496183334,
    "last_content_update" : 1496183334734,
    "path" : "~/Dropbox (hodgeswardelliott)/hodgeswardelliott Team Folder/Teams/Data/Tim_Kiely/Weather vs Revenue/Weather-vs-Revenue-v003.R",
    "project_path" : "Weather-vs-Revenue-v003.R",
    "properties" : {
        "docOutlineVisible" : "0",
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}